# This is a workflow to cache the sources for all the builds

name: Cache Source Files

# Controls when the workflow will run
# Triggers the workflow on push or pull request events and manually from the Actions tab
on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  cache-src:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}
      steps:
        - name: Cache main Source Files without .git
          uses: actions/cache@v3
          id: cache-tp-source-directory
          with:
            path: |
              !.git/**
              ${{github.workspace}}/**
            key: third-${{ github.sha }}

        - name: Check out main third party without submodules
          if: steps.cache-tp-source-directory.cache-hit != 'true'
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          uses: actions/checkout@v3
          with:
            path: '${{github.workspace}}'

        - name: Save the main cache
          if: steps.cache-tp-source-directory.cache-hit != 'true'
          uses: actions/cache/save@v3
          id: cache
          with:
            path: |
              !${{github.workspace}}/${{ matrix.name }}/.git/**
              ${{github.workspace}}/${{ matrix.name }}/**
            key: ${{ matrix.name }}-${{ matrix.shortsha }}

        - name: Set matrix of submodules
          id: set-matrix
          run: |
            content=$(git submodule)
            jsonContent="{ \"include\": [  "
            first="true"
            while read longsha name; do
              longsha="${longsha/'-'/}"
              shortsha="${longsha:0:7}"
              if [[ "$first" != "true" ]]; then
                jsonContent+=","
              fi
              jsonContent+="{ \"name\": \"$name\", \"shortsha\": \"$shortsha\", \"longsha\": \"$slongsha\" }"
              first="false"
            done <<<"$content"
            jsonContent+="] }"
            echo "matrix=$jsonContent" >> $GITHUB_OUTPUT
          shell: bash
          working-directory: ${{github.workspace}}

  cache_src:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/cache@v3
        id: cache-source-directory
        with:
          path: |
            !.git/**
            ${{github.workspace}}/**
          key: third-${{ github.sha }}

      - name: Cache Source Files without .git
        id: cache-source-directory
        uses: actions/cache@v3
        with:
          path: |
            !.git/**
            ${{github.workspace}}/${{ matrix.name }}/**
          key: ${{ matrix.name }}-${{ matrix.shortsha }}

      - name: Git clone submodule source code
        if: steps.cache-source-directory.cache-hit != 'true'
        run: |
          echo "Cloning source for ${{ matrix.name }}"
          git submodule update --init -- ${{ matrix.name }}
        shell: bash
        working-directory: ${{github.workspace}}

      - name: Save the cache
        if: steps.cache-source-directory.cache-hit != 'true'
        uses: actions/cache/save@v3
        id: cache
        with:
          path: |
            !.git/**
            ${{github.workspace}}/${{ matrix.name }}/**
          key: ${{ matrix.name }}-${{ matrix.shortsha }}
