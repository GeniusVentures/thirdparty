
name: test needs functionality with if

# Controls when the workflow will run
# Triggers the workflow on push or pull request events and manually from the Actions tab
on:
  workflow_dispatch:

jobs:
  setup-test:
    runs-on: ubuntu-latest
    outputs:
      has-matrix: ${{ steps.set-matrix.outputs.has-matrix }}
      TARGET_LIBRARY_NAMES: ${{ steps.set-targets-list.outputs.TARGET_LIBRARY_NAMES }}
      TARGET_KEYS: ${{ steps.set-matrix.outputs.TARGET_KEYS }}
      TARGET_PATHS: ${{ steps.set-matrix.outputs.TARGET_PATHS }}
    steps:
      - name: Set the keys/paths to try and restore
        id: set-matrix
        run: |
          echo "TARGET_KEYS=[ \"abseil-cpp-522606b\", \"Boost.DI-c5287ee\", \"boost-32da69a\" ]" >> $GITHUB_OUTPUT
          echo "TARGET_PATHS=[ [ \""'!'".git/**\", \"abseil-cpp/**\"], [ \""'!'".git/**\", \"Boost.DI/**\" ], [ \""'!'".git/**\", \"boost/**\"] ]" >> $GITHUB_OUTPUT
          echo "has-matrix='true'" >> $GITHUB_OUTPUT

      - name: Build the targets list
        id: set-targets-list
        run: |
          echo "TARGET_LIBRARY_NAMES=[ { \"libname\": \"absl\"}, { \"libname\": \"Boost.DI\"}, { \"libname\": \"Boost\"}]" >> $GITHUB_OUTPUT
#          - libname: Boost.DI${{os.EOL}}- libname: Boost${{os.EOL}}- libname: cares${{os.EOL}}- libname: ed25519${{os.EOL}}- libname: fmt${{os.EOL}}- libname: generated${{os.EOL}}- libname: grpc${{os.EOL}}- libname: GTest${{os.EOL}}- libname: ipfs-bitswap-cpp${{os.EOL}}- libname: ipfs-lite-cpp${{os.EOL}}- libname: ipfs-pubsub${{os.EOL}}- libname: kompute${{os.EOL}}- libname: libp2p${{os.EOL}}- libname: libsecp256k1${{os.EOL}}- libname: Microsoft.GSL${{os.EOL}}- libname: openssl${{os.EOL}}- libname: rapidjson${{os.EOL}}- libname: rocksdb${{os.EOL}}- libname: soralog${{os.EOL}}- libname: spdlog${{os.EOL}}- Libname: sqlite3${{os.EOL}}- libname: SQLiteModernCpp${{os.EOL}}- libname: sr25519-donna${{os.EOL}}- libname: tsl_hat_trie${{os.EOL}}- libname: xxhash${{os.EOL}}- libname: yaml-cpp"' >> $GITHUB_OUTPUT

  cache-src-test:
    needs: setup-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.setup-test.outputs.TARGET_LIBRARY_NAMES) }}
    steps:
      - name: Output the passed matrix
        id: cache-me
        run: |
          echo "Results: ${{ needs.setup-test.outputs.has-matrix }}"
          echo "libName = ${{ matrix.libname }}"

      - name: Check build library
        uses: GeniusVentures/cache-multi/restoremulti@develop
        with:
          keys: ${{ needs.setup-test.outputs.TARGET_KEYS }}
          paths: ${{ needs.setup-test.outputs.TARGET_PATHS }}
